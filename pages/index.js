import Head from "next/head";
import { useState } from "react";
import Navigation from "@/components/Navigation";
import Drawer from "@/components/Drawer";
import Footer from "@/components/Footer";
import style from "@/styles/Blogs.module.css";

export default function Posts({ blogs, users }) {
  const [drawer, setDrawer] = useState(false);
  const [blogDetail, setBlogDetail] = useState([]);
  const [comments, setComments] = useState([]);

  // OPEN DRAWER TO SEE THE DETAIL OF BLOG
  const handleOpenDrawer = async (blogId, username, blogTitle, blogBody) => {
    const res = await fetch(
      `https://gorest.co.in//public/v2/posts/${blogId}/comments`
    );
    const data = await res.json();
    setComments(data);
    setBlogDetail({
      name: username,
      title: blogTitle,
      body: blogBody,
    });
    setDrawer(true);
  };

  return (
    <>
      <Head>
        <title>Blogs | Synapsis Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Navigation />
      <header>
        <div className={style.hero}>
          <h1>A simple way to open the universe window.</h1>
        </div>
      </header>
      <main>
        <div className={style.blogs}>
          {blogs.map((blog) => {
            const user = users.find((user) => user.id === blog.user_id);
            return (
              <div className={style.blog_item} key={blog.id}>
                <h1 className={style.blog_title}>{blog.title}</h1>
                <p className={style.blog_elipsis_body}>{blog.body}</p>
                <div className={style.blog_detail}>
                  <p className={style.blog_name}>
                    {user ? user.name : "Anonim"}
                  </p>
                  <span
                    onClick={() => {
                      if (!user) {
                        handleOpenDrawer(
                          blog.id,
                          "Anonim",
                          blog.title,
                          blog.body
                        );
                      } else {
                        handleOpenDrawer(
                          blog.id,
                          user.name,
                          blog.title,
                          blog.body
                        );
                      }
                    }}
                    className={style.blog_detail_button}
                  >
                    Detail
                  </span>
                </div>
              </div>
            );
          })}
        </div>
      </main>
      <Footer />
      <Drawer isOpen={drawer}>
        <div
          className={style.close_button}
          onClick={() => {
            setDrawer(false);
          }}
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="icon icon-tabler icon-tabler-square-x"
            width="26"
            height="26"
            viewBox="0 0 24 24"
            strokeWidth="2"
            stroke="currentColor"
            fill="none"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
            <path d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z"></path>
            <path d="M10 10l4 4m0 -4l-4 4"></path>
          </svg>
        </div>
        <div className={style.blog_drawer}>
          <p className={style.blog_creator}>{blogDetail.name}</p>
          <h1 className={style.blog_title_drawer}>{blogDetail.title}</h1>
          <p className={style.blog_body}>{blogDetail.body}</p>
        </div>
        <div className={style.comments_drawer}>
          <p className={style.comment_count}>{comments.length} comment</p>
          {comments.length === 0
            ? ""
            : comments.map((comment) => (
                <div key={comment.id} className={style.comment_item}>
                  <h2 className={style.comment_name}>{comment.name}</h2>
                  <p className={style.comment_body}>{comment.body}</p>
                </div>
              ))}
        </div>
      </Drawer>
    </>
  );
}

export const getServerSideProps = async () => {
  const res = await fetch(`https://gorest.co.in/public/v2/posts`);
  const data = await res.json();

  // Agar data users yang diberikan sesuai dengan data posts yang diberikan.
  const res_users = await Promise.all(
    data.map(async (blog) => {
      const res = await fetch(
        `https://gorest.co.in/public/v2/users/${blog.user_id}`
      );
      const data = await res.json();
      return data;
    })
  );

  return {
    props: {
      blogs: data,
      users: res_users,
    },
  };
};
